# ============================================
# Environment Configuration
# ============================================

# Application Environment
# Sets the running environment of the application (development, production, test)
NODE_ENV=development

# ============================================
# Database Configuration
# ============================================

# PostgreSQL Database Connection URL
# Format: postgresql://[user]:[password]@[host]:[port]/[database]
DATABASE_URL=postgresql://user:password@localhost:5432/smartai

# Alternative PostgreSQL Configuration (if not using DATABASE_URL)
# POSTGRES_DB=smart_ai_hub
# POSTGRES_USER=postgres
# POSTGRES_PASSWORD=password

# ============================================
# Redis Configuration
# ============================================

# Redis Connection URL
# Used for caching, session storage, and queue management
REDIS_URL=redis://localhost:6379

# ============================================
# JWT Authentication Configuration
# ============================================

# JWT Secret Key
# Used to sign and verify JWT access tokens
# Must be at least 32 characters long for security
JWT_SECRET=your-secret-key-min-32-chars

# JWT Refresh Secret Key
# Used to sign and verify JWT refresh tokens
# Should be different from JWT_SECRET for better security
JWT_REFRESH_SECRET=your-refresh-secret-key

# JWT Access Token Expiry Time
# How long access tokens remain valid (default: 15 minutes)
JWT_ACCESS_EXPIRY=15m

# JWT Refresh Token Expiry Time
# How long refresh tokens remain valid (default: 7 days)
JWT_REFRESH_EXPIRY=7d

# ============================================
# Email Service Configuration
# ============================================

# SendGrid API Key
# Used for sending emails, notifications, and password resets
# Get your key from: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=your-sendgrid-key

# ============================================
# OAuth Configuration
# ============================================

# Google OAuth Client ID
# Used for Google OAuth authentication
# Get your client ID from: https://console.developers.google.com/
GOOGLE_CLIENT_ID=your-google-client-id

# Google OAuth Client Secret
# Used for Google OAuth authentication
# Keep this secret and never expose it in client-side code
GOOGLE_CLIENT_SECRET=your-google-client-secret

# OAuth Callback URL
# URL where Google redirects after authentication
OAUTH_CALLBACK_URL=http://localhost:3001/auth/oauth2/callback

# ============================================
# Payment Configuration
# ============================================

# Stripe Secret Key
# Used for processing payments and managing subscriptions
# Get your key from: https://dashboard.stripe.com/apikeys
STRIPE_SECRET_KEY=your-stripe-key

# ============================================
# Frontend Configuration
# ============================================

# Frontend API URL
# Base URL for API requests from the frontend
VITE_API_URL=http://localhost:80

# ============================================
# Server Configuration
# ============================================

# Nginx Port (if using custom nginx configuration)
# Port on which nginx will serve the application
NGINX_PORT=80

# ============================================
# AI & LLM Configuration
# ============================================

# OpenAI API Key
# Used for accessing OpenAI models like GPT-4
OPENAI_API_KEY=sk-your-key-here

# Anthropic API Key
# Used for accessing Anthropic models like Claude
ANTHROPIC_API_KEY=your-anthropic-api-key

# Google AI API Key
# Used for accessing Google AI models like Gemini
GOOGLE_AI_API_KEY=your-google-ai-api-key

# ============================================
# RAG System Configuration
# ============================================

# RAG Embedding Model
# Model used for document embeddings
RAG_EMBEDDING_MODEL=text-embedding-ada-002

# RAG Chunk Size
# Size of document chunks for processing (in characters)
RAG_CHUNK_SIZE=1000

# RAG Chunk Overlap
# Overlap between document chunks (in characters)
RAG_CHUNK_OVERLAP=200

# RAG Maximum Chunks per Document
# Maximum number of chunks to create per document
RAG_MAX_CHUNKS_PER_DOCUMENT=1000

# RAG Service URL
# URL of the RAG service (if running separately)
RAG_SERVICE_URL=http://localhost:3003

# ============================================
# Pricing System Configuration
# ============================================

# Pricing Default Currency
# Default currency for pricing calculations
PRICING_DEFAULT_CURRENCY=USD

# Pricing Credit Conversion Rate
# Conversion rate from credits to currency
PRICING_CREDIT_CONVERSION_RATE=0.01

# Pricing Service URL
# URL of the pricing service (if running separately)
PRICING_SERVICE_URL=http://localhost:3004

# ============================================
# Agent Skills Marketplace Configuration
# ============================================

# Skills Maximum File Size
# Maximum file size for skill uploads (in bytes)
SKILLS_MAX_FILE_SIZE=52428800

# Skills Approval Required
# Whether skills require approval before being listed
SKILLS_APPROVAL_REQUIRED=true

# Skills Auto Approve Trusted Creators
# Whether to auto-approve skills from trusted creators
SKILLS_AUTO_APPROVE_TRUSTED_CREATORS=false

# Agent Skills Service URL
# URL of the agent skills service (if running separately)
AGENT_SKILLS_SERVICE_URL=http://localhost:3005

# ============================================
# File Storage Configuration
# ============================================

# Storage Provider
# Provider for file storage (aws, gcp, azure, local)
STORAGE_PROVIDER=local

# AWS Configuration (if using AWS S3)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_S3_BUCKET=smartaihub-files

# Google Cloud Storage Configuration (if using GCP)
GCP_PROJECT_ID=your-gcp-project-id
GCP_KEY_FILE=path/to/service-account-key.json
GCS_BUCKET=smartaihub-files

# Azure Storage Configuration (if using Azure)
AZURE_STORAGE_ACCOUNT=your-azure-storage-account
AZURE_STORAGE_KEY=your-azure-storage-key
AZURE_CONTAINER=smartaihub-files

# Local Storage Configuration (if using local storage)
LOCAL_STORAGE_PATH=./uploads

# ============================================
# API Gateway Configuration
# ============================================

# API Gateway Port
# Port on which the API gateway will run
API_GATEWAY_PORT=3001

# Core Service URL
# URL of the core service
CORE_SERVICE_URL=http://localhost:3002

# ============================================
# Monitoring & Logging Configuration
# ============================================

# Sentry DSN
# Data Source Name for Sentry error tracking
SENTRY_DSN=your-sentry-dsn

# Log Level
# Level of logging (error, warn, info, debug)
LOG_LEVEL=info

# ============================================
# SMTP Configuration (Alternative to SendGrid)
# ============================================

# SMTP Host
# Hostname of the SMTP server
SMTP_HOST=smtp.gmail.com

# SMTP Port
# Port of the SMTP server
SMTP_PORT=587

# SMTP User
# Username for SMTP authentication
SMTP_USER=your-email@gmail.com

# SMTP Password
# Password for SMTP authentication
SMTP_PASS=your-app-password

# ============================================
# Rate Limiting Configuration
# ============================================

# Rate Limit Window
# Time window for rate limiting (in milliseconds)
RATE_LIMIT_WINDOW=60000

# Rate Limit Max
# Maximum number of requests per window
RATE_LIMIT_MAX=100
{
  "name": "smart-ai-hub",
  "version": "1.0.0",
  "description": "Monorepo for Smart AI Hub services",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "npm-run-all --parallel dev:frontend dev:core-service",
    "build": "npm-run-all --serial build:shared build:core-service build:api-gateway build:webhook-service build:mcp-server build:notification-service build:analytics-service build:speckit build:frontend",
    "start": "npm-run-all --parallel start:*",
    "dev:frontend": "cd packages/frontend && npm run dev",
    "dev:core-service": "cd packages/core-service && npm run dev",
    "build:shared": "cd packages/shared && npm run build",
    "build:core-service": "cd packages/core-service && npm run build",
    "build:api-gateway": "cd packages/api-gateway && npm run build",
    "build:webhook-service": "cd packages/webhook-service && npm run build",
    "build:mcp-server": "cd packages/mcp-server && npm run build",
    "build:notification-service": "cd packages/notification-service && npm run build",
    "build:analytics-service": "cd packages/analytics-service && npm run build",
    "build:speckit": "cd packages/speckit && npm run build",
    "build:frontend": "cd packages/frontend && npm run build",
    "install:all": "npm-run-all --serial install:shared install:api-gateway install:core-service install:webhook-service install:mcp-server install:notification-service install:analytics-service install:speckit install:frontend",
    "install:shared": "cd packages/shared && npm install",
    "install:api-gateway": "cd packages/api-gateway && npm install",
    "install:core-service": "cd packages/core-service && npm install",
    "install:webhook-service": "cd packages/webhook-service && npm install",
    "install:mcp-server": "cd packages/mcp-server && npm install",
    "install:notification-service": "cd packages/notification-service && npm install",
    "install:analytics-service": "cd packages/analytics-service && npm install",
    "install:speckit": "cd packages/speckit && npm install",
    "install:frontend": "cd packages/frontend && npm install",
    "lint": "eslint \"**/*.{ts,tsx}\"",
    "lint:fix": "eslint \"**/*.{ts,tsx}\" --fix",
    "format": "prettier --write \"**/*.{ts,tsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "test": "jest --testPathIgnorePatterns=\"/tests/e2e/\" --testPathIgnorePatterns=\"security-headers\\.spec\\.ts$\" --testPathIgnorePatterns=\"authorization-verification\\.spec\\.ts$\" --testPathIgnorePatterns=\"visibility-verification\\.spec\\.ts$\"",
    "test:watch": "jest --watch --testPathIgnorePatterns=\"/tests/e2e/\" --testPathIgnorePatterns=\"security-headers\\.spec\\.ts$\" --testPathIgnorePatterns=\"authorization-verification\\.spec\\.ts$\" --testPathIgnorePatterns=\"visibility-verification\\.spec\\.ts$\"",
    "test:coverage": "jest --coverage --testPathIgnorePatterns=\"/tests/e2e/\" --testPathIgnorePatterns=\"security-headers\\.spec\\.ts$\" --testPathIgnorePatterns=\"authorization-verification\\.spec\\.ts$\" --testPathIgnorePatterns=\"visibility-verification\\.spec\\.ts$\"",
    "test:security": "jest tests/security",
    "test:e2e": "playwright test",
    "validate:specs": "echo 'No spec validation configured yet' && exit 0",
    "validate:report": "node analyze_quality_report.js",
    "check:lockfile": "echo 'Lockfile check not implemented yet' && exit 0",
    "prepare": "husky"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.3.1",
    "@playwright/test": "^1.40.1",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.12",
    "@types/node": "^22.4.1",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "eslint": "^9.36.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.4",
    "express": "^5.1.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^16.2.3",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.6.2",
    "supertest": "^6.3.4",
    "ts-jest": "^29.1.2",
    "typescript": "^5.5.4",
    "typescript-eslint": "^8.45.0"
  },
  "dependencies": {
    "@prisma/client": "^6.17.1",
    "@types/jsonwebtoken": "^9.0.10",
    "cors": "^2.8.5",
    "dotenv": "^17.2.3",
    "jsonwebtoken": "^9.0.2",
    "node-fetch": "^3.3.2"
  }
}

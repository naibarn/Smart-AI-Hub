// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @unique @db.VarChar(50)
  permissions Json     @default("{}")
  createdAt   DateTime @default(now()) @map("created_at")

  users User[]

  @@map("roles")
}

model User {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String    @unique @db.VarChar(255)
  passwordHash String?   @map("password_hash") @db.VarChar(255)
  googleId     String?   @unique @map("google_id") @db.VarChar(255)
  emailVerified Boolean  @default(false) @map("email_verified")
  roleId       String?   @map("role_id") @db.Uuid
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  role         Role?     @relation(fields: [roleId], references: [id])
  profile      UserProfile?
  creditAccount CreditAccount?
  creditTransactions CreditTransaction[]

  @@map("users")
}

model UserProfile {
  userId     String   @id @map("user_id") @db.Uuid
  firstName  String?  @map("first_name") @db.VarChar(100)
  lastName   String?  @map("last_name") @db.VarChar(100)
  avatarUrl  String?  @map("avatar_url") @db.VarChar(500)
  preferences Json     @default("{}")
  updatedAt  DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_profiles")
}

model CreditAccount {
  userId         String   @id @map("user_id") @db.Uuid
  currentBalance Int      @default(0) @map("current_balance")
  totalPurchased Int      @default(0) @map("total_purchased")
  totalUsed      Int      @default(0) @map("total_used")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credit_accounts")
}

model CreditTransaction {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @map("user_id") @db.Uuid
  type        TransactionType
  amount      Int
  balanceAfter Int     @map("balance_after")
  description String?  @db.Text
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("credit_transactions")
}

enum TransactionType {
  purchase
  usage
  refund
  admin_adjustment
}
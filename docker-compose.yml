
version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-smart_ai_hub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /var/log/postgres:/var/log/postgres
    networks:
      - smart-ai-hub
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=postgres"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - /var/log/redis:/var/log/redis
    networks:
      - smart-ai-hub
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=redis"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /var/log/nginx:/var/log/nginx
    networks:
      - smart-ai-hub
    depends_on:
      - api-gateway
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nginx"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build: ./packages/api-gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/api-gateway
      - CORE_SERVICE_URL=http://core-service:3002
      - RAG_SERVICE_URL=http://rag-service:3003
      - PRICING_SERVICE_URL=http://pricing-service:3004
      - AGENT_SKILLS_SERVICE_URL=http://agent-skills-service:3005
      - JWT_SECRET=your-secret-key-min-32-chars
    volumes:
      - /var/log/api-gateway:/var/log/api-gateway
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      core-service:
        condition: service_healthy
      rag-service:
        condition: service_healthy
      pricing-service:
        condition: service_healthy
      agent-skills-service:
        condition: service_healthy
      mcp-server:
        condition: service_healthy
      webhook-service:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=api-gateway"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build: ./packages/auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=secret
      - OAUTH_CLIENT_ID=client_id
      - OAUTH_CLIENT_SECRET=client_secret
      - REDIS_URL=redis://redis:6379
      - WEBHOOK_SERVICE_URL=http://webhook-service:3005
      - INTERNAL_SERVICE_SECRET=internal_webhook_secret_12345
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/auth-service
    volumes:
      - /var/log/auth-service:/var/log/auth-service
    networks:
      - smart-ai-hub
    depends_on:
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=auth-service"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  core-service:
    build: ./packages/core-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smart_ai_hub}
      - REDIS_URL=redis://redis:6379
      - WEBHOOK_SERVICE_URL=http://webhook-service:3006
      - INTERNAL_SERVICE_SECRET=internal_webhook_secret_12345
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/core-service
      - JWT_SECRET=your-secret-key-min-32-chars
      - JWT_REFRESH_SECRET=your-refresh-secret-key
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - STORAGE_PROVIDER=local
      - LOCAL_STORAGE_PATH=./uploads
    volumes:
      - /var/log/core-service:/var/log/core-service
      - ./uploads:/app/uploads
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=core-service"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  rag-service:
    build: ./packages/rag-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smart_ai_hub}
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - RAG_EMBEDDING_MODEL=text-embedding-ada-002
      - RAG_CHUNK_SIZE=1000
      - RAG_CHUNK_OVERLAP=200
      - RAG_MAX_CHUNKS_PER_DOCUMENT=1000
      - STORAGE_PROVIDER=local
      - LOCAL_STORAGE_PATH=./uploads
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/rag-service
    volumes:
      - /var/log/rag-service:/var/log/rag-service
      - ./uploads:/app/uploads
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  pricing-service:
    build: ./packages/pricing-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smart_ai_hub}
      - REDIS_URL=redis://redis:6379
      - PRICING_DEFAULT_CURRENCY=USD
      - PRICING_CREDIT_CONVERSION_RATE=0.01
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/pricing-service
    volumes:
      - /var/log/pricing-service:/var/log/pricing-service
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  agent-skills-service:
    build: ./packages/agent-skills-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smart_ai_hub}
      - REDIS_URL=redis://redis:6379
      - SKILLS_MAX_FILE_SIZE=52428800
      - SKILLS_APPROVAL_REQUIRED=true
      - SKILLS_AUTO_APPROVE_TRUSTED_CREATORS=false
      - STORAGE_PROVIDER=local
      - LOCAL_STORAGE_PATH=./uploads
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/agent-skills-service
    volumes:
      - /var/log/agent-skills-service:/var/log/agent-skills-service
      - ./uploads:/app/uploads
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  mcp-server:
    build: ./packages/mcp-server
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - WEBHOOK_SERVICE_URL=http://webhook-service:3006
      - INTERNAL_SERVICE_SECRET=internal_webhook_secret_12345
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/mcp-server
    volumes:
      - /var/log/mcp-server:/var/log/mcp-server
    networks:
      - smart-ai-hub
    depends_on:
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=mcp-server"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  webhook-service:
    build: ./packages/webhook-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-smart_ai_hub}
      - REDIS_URL=redis://redis:6379
      - INTERNAL_SERVICE_SECRET=internal_webhook_secret_12345
      - WEBHOOK_SECRET=webhook_signing_secret_12345
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/webhook-service
    volumes:
      - /var/log/webhook-service:/var/log/webhook-service
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=webhook-service"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification-service:
    build: ./packages/notification-service
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=info
      - LOG_DIR=/var/log/notification-service
    volumes:
      - /var/log/notification-service:/var/log/notification-service
    networks:
      - smart-ai-hub
    depends_on:
      redis:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=notification-service"

  frontend:
    build: ./packages/frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3001
      - VITE_APP_NAME=Smart AI Hub
      - VITE_APP_VERSION=1.0.0
    networks:
      - smart-ai-hub
    depends_on:
      api-gateway:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=frontend"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  smart-ai-hub:
    driver: bridge
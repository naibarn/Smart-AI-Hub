version: '3.8'

services:
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    volumes:
      - redis_data:/data

  nginx:
    extends:
      file: docker-compose.yml
      service: nginx
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro

  api-gateway:
    build: ./packages/api-gateway
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      auth-service:
        condition: service_healthy
      core-service:
        condition: service_healthy
      mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth-service:
    build: ./packages/auth-service
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}
      - OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}
      - REDIS_URL=redis://redis:6379
    networks:
      - smart-ai-hub
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  core-service:
    build: ./packages/core-service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=redis://redis:6379
    networks:
      - smart-ai-hub
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp-server:
    build: ./packages/mcp-server
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    networks:
      - smart-ai-hub
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./packages/frontend
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://nginx:80
    networks:
      - smart-ai-hub
    depends_on:
      nginx:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  smart-ai-hub:
    driver: bridge